from openai import OpenAI
import os
from dotenv import load_dotenv

load_dotenv()
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))
model = os.getenv("OPENAI_MODEL", "gpt-4o-mini")

def generate_text(task_description: str):
    prompt = f"""
Voc√™ √© um professor do 2¬∫ ano do ensino fundamental. Gere 3 atividades pedag√≥gicas curtas e claras para crian√ßas de aproximadamente 7 anos, com base no seguinte pedido do usu√°rio:

"{task_description}"

Cada atividade deve conter:

- Um t√≠tulo simples (opcional)
- Uma instru√ß√£o clara precedida de "üîä"
- 3 a 4 alternativas (A, B, C...) formatadas como: "( ) texto da op√ß√£o"
- Conte√∫do adequado √† faixa et√°ria
- Temas de leitura, vocabul√°rio, l√≥gica ou observa√ß√£o
- N√£o use imagens, apenas texto

Formato esperado (sem explica√ß√µes, apenas texto direto):

ATIVIDADE 1  
üîä LEIA O TEXTO ABAIXO E ESCOLHA A RESPOSTA CERTA.  
( ) ALTERNATIVA A  
( ) ALTERNATIVA B  
( ) ALTERNATIVA C  
( ) ALTERNATIVA D  

[Repita para Atividade 2 e 3]

Comece agora. Gere apenas as 3 atividades, sem coment√°rios nem introdu√ß√µes.
    """

    response = client.chat.completions.create(
        model=model,
        messages=[
            {"role": "system", "content": "Voc√™ √© um gerador de atividades pedag√≥gicas compat√≠veis com impress√£o."},
            {"role": "user", "content": prompt}
        ],
        temperature=0.4
    )

    return response.choices[0].message.content.strip()
